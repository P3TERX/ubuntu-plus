#===================================================
# https://github.com/P3TERX/ubuntu-plus
# Description: Ubuntu image with some extra packages
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com (chinese)
#===================================================
name: Docker images publish

on:
  repository_dispatch:
    types: [Manual*, Auto* ,test]
  push:
    paths:
      - 'Dockerfile'
  schedule:
    - cron: 0 22 * * 5

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        IMAGE_TAG: [latest, rolling, 20.04, 18.04]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install buildx
      run: |
        mkdir -vp ~/.docker/cli-plugins/
        wget -nv -O- https://api.github.com/repos/docker/buildx/releases/latest \
        | grep "browser_download_url.*linux-amd64\"" \
        | cut -d '"' -f 4 \
        | wget -nv -O ~/.docker/cli-plugins/docker-buildx -i-
        chmod +x ~/.docker/cli-plugins/docker-buildx

    - name: Set up buildx
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --use --name multi-arch-builder

    - name: Available platforms
      run: |
        docker buildx inspect --bootstrap | grep Platforms

    - name: Login to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      env:
        PLATFORMS: linux/amd64,linux/arm64/v8
        IMAGE_NAME: p3terx/ubuntu-plus
        IMAGE_TAG: ${{ matrix.IMAGE_TAG }}
        DOCKERFILE: Dockerfile
        FILE_PATH: .
      run: |
        docker buildx build --push \
          --platform ${PLATFORMS} \
          --build-arg IMAGE_TAG \
          -t ${IMAGE_NAME}:${IMAGE_TAG} \
          -f ${DOCKERFILE} \
          ${FILE_PATH}

  tigger:
    runs-on: ubuntu-latest
    needs: publish

    steps:
    - name: Trigger other image builds
      if: (!contains(github.event.action, 'test'))
      env:
        ACTIONS_TRIGGER_TOKEN: ${{ secrets.ACTIONS_TRIGGER }}
        REPO_NAME: P3TERX/openwrt-build-env
        TRIGGER_KEYWORDS: 'Auto trigger'
      run: |
        sh <(curl -fsSL git.io/trigger.sh) "$ACTIONS_TRIGGER_TOKEN" "$REPO_NAME" "$TRIGGER_KEYWORDS"
